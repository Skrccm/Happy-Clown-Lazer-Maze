package files;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
/**
 * PauseMenu that fades in.
 * @author Calvin Chan, JunHee Cho
 * @version 3 May 31st, 2012
 */
public class PauseMenu extends JPanel implements ActionListener
{
  /**
   * Reference variable to the parent;
   */
  private MainMenu parent;
  /**
   * Stores the Serial Version UID. 
   */
  private static final long serialVersionUID = 1L;
  /**
   * Holds the transparency value of the jpanel
   */
  private float alpha=0.00f;
  /**
   * The timer to create Fadingclown objects.
   */
  private javax.swing.Timer timer;
  /**
   * Holds 4 clown images
   */
  private ImageIcon[]images;
  /**
   * Holds the number of clowns on the screen.
   */
  private int numClowns;
  /**
   * Sets up the jpanel, images, buttons, and starts the timer.
   * @param parent the parent program
   */
  public PauseMenu(MainMenu parent)
  {
    setLayout(null);
    setOpaque(false);
    this.parent=parent;
    images=new ImageIcon[5];
    for(int x=1;x<=5;x++)
    {
      images[x-1]=ImageLoader.imageIcon("/images/clowns/clown"+x+".png");
    }
    JPanel buttons=new JPanel();
    buttons.setLayout(new BoxLayout(buttons,BoxLayout.PAGE_AXIS));
    buttons.setOpaque(false);
    JLabel temp=new JLabel(ImageLoader.imageIcon("/images/pausemenu/pausemenu.png"));
    temp.setAlignmentX(Component.CENTER_ALIGNMENT);
    JButton resume=ButtonMaker.makeButton("resumegame",parent);
    resume.setAlignmentX(Component.CENTER_ALIGNMENT);
    resume.setMnemonic(KeyEvent.VK_1);
    JButton restart=ButtonMaker.makeButton("restartlevel",parent);
    restart.setAlignmentX(Component.CENTER_ALIGNMENT);
    restart.setMnemonic(KeyEvent.VK_2);
    JButton quit2main=ButtonMaker.makeButton("quittomain",parent);
    quit2main.setAlignmentX(Component.CENTER_ALIGNMENT);
    quit2main.setMnemonic(KeyEvent.VK_3);
    JButton quit2desk=ButtonMaker.makeButton("quittodesk",parent);
    quit2desk.setAlignmentX(Component.CENTER_ALIGNMENT);
    quit2desk.setMnemonic(KeyEvent.VK_4);
    buttons.add(temp);
    buttons.add(resume);
    buttons.add(restart);
    buttons.add(quit2main);
    buttons.add(quit2desk);
    buttons.setBounds(0,0,700,550);
    add(buttons);
    validate();
    timer=new javax.swing.Timer(2000,this);
  }
  /**
   * Removes temp from the screen
   * @param temp FadingClown to remove.
   */
  public void removeClown(FadingClown temp)
  {
    remove(temp);
    temp=null;
    numClowns--;
  }
  /**
   * Sets up to fade in the jpanel.
   */
  public void run()
  {
    alpha=0.0f;
    setVisible(true);
    timer.restart();
  }
  /**
   * Sets up to hide the jpanel.
   */
  public void stop()
  {
    setVisible(false);
    timer.stop();
  }
  /**
   * Overrides the drawing method to draw the fading jpanel instead.
   * @param g The graphics object to draw on.
   * <PRE>Name                  Type                 Description</PRE>
   * <PRE>g2d                   Graphics2D           Allows extra features to draw the image (transparency)
   */
  @Override
  public void paintComponent(Graphics g)
  {
    super.paintComponent(g);
    if(timer.isRunning())
    {
      repaint();
      if(alpha<0.5f)
      {
        alpha+=0.01f;
        try
        {
          Thread.sleep(1);
        }
        catch(InterruptedException ie)
        {
        }
        repaint();
      }
      Graphics2D g2d = (Graphics2D) g;
      g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
      g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha));
      g2d.setColor(Color.BLACK);
      g.fillRect (0, 0, 700, 550);
    }
  }
  /**
   * Called every few seconds to create a fadingclown object
   * @param ae Holds extra information on the actionevent.
   */
  public void actionPerformed(ActionEvent ae)
  {
    if(numClowns<2 && timer.isRunning())
    {
      numClowns++;
      FadingClown temp=new FadingClown(this,images[(int)(Math.random()*5)]);
      temp.setBounds((int)(Math.random()*440),(int)(Math.random()*300),200,200);
      add(temp);
      repaint();
    }
  }
}